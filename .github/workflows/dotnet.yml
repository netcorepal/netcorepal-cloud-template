name: .NET

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore NetCorePal.Template.csproj
    - name: Build
      run: dotnet build --no-restore NetCorePal.Template.csproj
    - name: Test
      run: dotnet test --verbosity normal template/ABC.Template.sln
    - name: Pack NuGet
      run: dotnet pack -c Release --version-suffix alpha`date +%y%m%d%H%M` -o "./" NetCorePal.Template.csproj 
    - name: Push NuGet
      run: dotnet nuget push '*.nupkg' -s https://www.myget.org/F/netcorepal/api/v3/index.json -k ${{ secrets.MYGET_API_KEY }} --skip-duplicate

  template-smoke-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        config:
          - name: "Default-MySql-RabbitMQ"
            framework: "net9.0"
            database: "MySql"
            messagequeue: "RabbitMQ"
          - name: "SqlServer-Kafka"
            framework: "net8.0"
            database: "SqlServer"
            messagequeue: "Kafka"

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
        
    - name: Install template locally
      run: dotnet new install .
      
    - name: Generate project from template - ${{ matrix.config.name }}
      run: |
        mkdir -p test-projects/${{ matrix.config.name }}
        cd test-projects/${{ matrix.config.name }}
        dotnet new netcorepal-web -n TestProject -F ${{ matrix.config.framework }} -D ${{ matrix.config.database }} -M ${{ matrix.config.messagequeue }}
      
    - name: Build generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        dotnet build --configuration Release
        
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image for generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        docker build -f src/TestProject.Web/Dockerfile -t testproject-${{ matrix.config.name }}:latest .
        
    - name: Uninstall template
      run: dotnet new uninstall .
      if: always()
