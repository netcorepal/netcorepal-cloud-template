name: PR

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore NetCorePal.Template.csproj
    - name: Build
      run: dotnet build --no-restore NetCorePal.Template.csproj
    - name: Test
      run: dotnet test --verbosity normal template/ABC.Template.sln

  template-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        config:
          - name: "MySQL-RabbitMQ-NET8"
            framework: "net8.0"
            database: "MySql"
            messagequeue: "RabbitMQ"
          - name: "SqlServer-Kafka-NET9"
            framework: "net9.0"
            database: "SqlServer"
            messagequeue: "Kafka"
          - name: "PostgreSQL-RedisStreams-NET8"
            framework: "net8.0"
            database: "PostgreSQL"
            messagequeue: "RedisStreams"
          - name: "MySqlOfficial-AzureServiceBus-NET9"
            framework: "net9.0"
            database: "MySqlOfficial"
            messagequeue: "AzureServiceBus"
          - name: "Default-Configuration"
            framework: "net9.0"
            database: "MySql"
            messagequeue: "RabbitMQ"

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
        
    - name: Install template locally
      run: dotnet new install .
      
    - name: Generate project from template - ${{ matrix.config.name }}
      run: |
        mkdir -p test-projects/${{ matrix.config.name }}
        cd test-projects/${{ matrix.config.name }}
        dotnet new netcorepal-web -n TestProject -F ${{ matrix.config.framework }} -D ${{ matrix.config.database }} -M ${{ matrix.config.messagequeue }}
      
    - name: Restore dependencies for generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        dotnet restore
        
    - name: Build generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        dotnet build --no-restore --configuration Release
        
    - name: Run tests for generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        dotnet test --no-build --configuration Release --verbosity normal
        
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image for generated project
      run: |
        cd test-projects/${{ matrix.config.name }}/TestProject
        docker build -f src/TestProject.Web/Dockerfile -t testproject-${{ matrix.config.name }}:latest .
        
    - name: Verify Docker image
      run: |
        docker images testproject-${{ matrix.config.name }}:latest
        
    - name: Uninstall template
      run: dotnet new uninstall .
      if: always()
